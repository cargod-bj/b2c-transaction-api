// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.9.0
// source: order/order.proto

package order

import (
	common "github.com/cargod-bj/b2c-proto-common/common"
	orderCheckList "github.com/cargod-bj/b2c-transaction-api/orderCheckList"
	orderFee "github.com/cargod-bj/b2c-transaction-api/orderFee"
	orderFlowLog "github.com/cargod-bj/b2c-transaction-api/orderFlowLog"
	orderRefund "github.com/cargod-bj/b2c-transaction-api/orderRefund"
	payment "github.com/cargod-bj/b2c-transaction-api/payment"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeliveryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerName       string `protobuf:"bytes,2,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	OwnerNum        string `protobuf:"bytes,3,opt,name=ownerNum,proto3" json:"ownerNum,omitempty"`
	OwnerId         string `protobuf:"bytes,4,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	DeliveryType    uint32 `protobuf:"varint,5,opt,name=deliveryType,proto3" json:"deliveryType,omitempty"`
	DeliveryDate    uint64 `protobuf:"varint,6,opt,name=deliveryDate,proto3" json:"deliveryDate,omitempty"`
	DeliveryAddress string `protobuf:"bytes,7,opt,name=deliveryAddress,proto3" json:"deliveryAddress,omitempty"`
}

func (x *DeliveryInfo) Reset() {
	*x = DeliveryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryInfo) ProtoMessage() {}

func (x *DeliveryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryInfo.ProtoReflect.Descriptor instead.
func (*DeliveryInfo) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *DeliveryInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliveryInfo) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *DeliveryInfo) GetOwnerNum() string {
	if x != nil {
		return x.OwnerNum
	}
	return ""
}

func (x *DeliveryInfo) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *DeliveryInfo) GetDeliveryType() uint32 {
	if x != nil {
		return x.DeliveryType
	}
	return 0
}

func (x *DeliveryInfo) GetDeliveryDate() uint64 {
	if x != nil {
		return x.DeliveryDate
	}
	return 0
}

func (x *DeliveryInfo) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

type OrderDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId              uint64         `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AppointmentId       uint64         `protobuf:"varint,3,opt,name=appointmentId,proto3" json:"appointmentId,omitempty"`
	StaffId             uint64         `protobuf:"varint,4,opt,name=staffId,proto3" json:"staffId,omitempty"` //服务人员id
	LeadId              uint64         `protobuf:"varint,5,opt,name=leadId,proto3" json:"leadId,omitempty"`
	CarId               uint64         `protobuf:"varint,6,opt,name=carId,proto3" json:"carId,omitempty"`
	Type                uint32         `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	StoreId             uint64         `protobuf:"varint,8,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Status              uint32         `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	ReceivableAmount    string         `protobuf:"bytes,10,opt,name=receivableAmount,proto3" json:"receivableAmount,omitempty"` //需要支付金额
	PaiedAmount         string         `protobuf:"bytes,11,opt,name=paiedAmount,proto3" json:"paiedAmount,omitempty"`           //已支付金额
	TotalAmount         string         `protobuf:"bytes,12,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`           //总金额
	DiscountedAmount    string         `protobuf:"bytes,13,opt,name=discountedAmount,proto3" json:"discountedAmount,omitempty"` //优惠金额
	CreateTime          uint64         `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime          uint64         `protobuf:"varint,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	OrderNo             uint64         `protobuf:"varint,16,opt,name=orderNo,proto3" json:"orderNo,omitempty"`
	Insurance           string         `protobuf:"bytes,17,opt,name=insurance,proto3" json:"insurance,omitempty"`
	Warranty            string         `protobuf:"bytes,18,opt,name=warranty,proto3" json:"warranty,omitempty"`
	DeliveryType        uint32         `protobuf:"varint,19,opt,name=deliveryType,proto3" json:"deliveryType,omitempty"`
	DeliveryDate        int64          `protobuf:"varint,20,opt,name=deliveryDate,proto3" json:"deliveryDate,omitempty"`
	DeliveryAddress     string         `protobuf:"bytes,21,opt,name=deliveryAddress,proto3" json:"deliveryAddress,omitempty"`
	OwnerName           string         `protobuf:"bytes,22,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	ConsigneeName       string         `protobuf:"bytes,23,opt,name=consigneeName,proto3" json:"consigneeName,omitempty"`
	OwnerNum            string         `protobuf:"bytes,24,opt,name=ownerNum,proto3" json:"ownerNum,omitempty"`       //所有者电话
	OwnerId             string         `protobuf:"bytes,25,opt,name=ownerId,proto3" json:"ownerId,omitempty"`         //所有者身份证号
	Car                 string         `protobuf:"bytes,26,opt,name=car,proto3" json:"car,omitempty"`                 //车信息
	StatusLabel         string         `protobuf:"bytes,27,opt,name=statusLabel,proto3" json:"statusLabel,omitempty"` //显示状态
	CarPrice            string         `protobuf:"bytes,28,opt,name=carPrice,proto3" json:"carPrice,omitempty"`
	ContactNo           string         `protobuf:"bytes,29,opt,name=contactNo,proto3" json:"contactNo,omitempty"` //联系方式
	Name                string         `protobuf:"bytes,30,opt,name=name,proto3" json:"name,omitempty"`           //姓名
	Email               string         `protobuf:"bytes,31,opt,name=email,proto3" json:"email,omitempty"`
	Location            string         `protobuf:"bytes,32,opt,name=location,proto3" json:"location,omitempty"`
	FeeList             []*OrderFeeDto `protobuf:"bytes,33,rep,name=feeList,proto3" json:"feeList,omitempty"`                          //费用信息
	CarNo               string         `protobuf:"bytes,34,opt,name=carNo,proto3" json:"carNo,omitempty"`                              //车辆编号
	PaymentAmount       string         `protobuf:"bytes,35,opt,name=paymentAmount,proto3" json:"paymentAmount,omitempty"`              //收款总额
	RefundAmount        string         `protobuf:"bytes,36,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`                //退款总额
	ReceiptTime         uint64         `protobuf:"varint,37,opt,name=receiptTime,proto3" json:"receiptTime,omitempty"`                 //确认收货时间
	DeliveryId          uint64         `protobuf:"varint,38,opt,name=deliveryId,proto3" json:"deliveryId,omitempty"`                   //配送人id
	OrderPicName        string         `protobuf:"bytes,39,opt,name=orderPicName,proto3" json:"orderPicName,omitempty"`                //服务人员姓名
	LicensePlate        string         `protobuf:"bytes,40,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`                //车牌号
	OperatorId          uint64         `protobuf:"varint,41,opt,name=operatorId,proto3" json:"operatorId,omitempty"`                   //操作人员ID
	JpjCost             string         `protobuf:"bytes,42,opt,name=jpjCost,proto3" json:"jpjCost,omitempty"`                          //手续费
	RoadTaxCost         string         `protobuf:"bytes,43,opt,name=roadTaxCost,proto3" json:"roadTaxCost,omitempty"`                  //路费
	FisCost             string         `protobuf:"bytes,44,opt,name=fisCost,proto3" json:"fisCost,omitempty"`                          //抵押手续费
	WarrantyCost        string         `protobuf:"bytes,45,opt,name=warrantyCost,proto3" json:"warrantyCost,omitempty"`                //保险费用
	BankCost            string         `protobuf:"bytes,46,opt,name=bankCost,proto3" json:"bankCost,omitempty"`                        //银行过户手续费
	PaymentCompleteTime uint64         `protobuf:"varint,47,opt,name=paymentCompleteTime,proto3" json:"paymentCompleteTime,omitempty"` //点击paymentcomplete时间
}

func (x *OrderDTO) Reset() {
	*x = OrderDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDTO) ProtoMessage() {}

func (x *OrderDTO) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDTO.ProtoReflect.Descriptor instead.
func (*OrderDTO) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDTO) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderDTO) GetAppointmentId() uint64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *OrderDTO) GetStaffId() uint64 {
	if x != nil {
		return x.StaffId
	}
	return 0
}

func (x *OrderDTO) GetLeadId() uint64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

func (x *OrderDTO) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *OrderDTO) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderDTO) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *OrderDTO) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderDTO) GetReceivableAmount() string {
	if x != nil {
		return x.ReceivableAmount
	}
	return ""
}

func (x *OrderDTO) GetPaiedAmount() string {
	if x != nil {
		return x.PaiedAmount
	}
	return ""
}

func (x *OrderDTO) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *OrderDTO) GetDiscountedAmount() string {
	if x != nil {
		return x.DiscountedAmount
	}
	return ""
}

func (x *OrderDTO) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *OrderDTO) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *OrderDTO) GetOrderNo() uint64 {
	if x != nil {
		return x.OrderNo
	}
	return 0
}

func (x *OrderDTO) GetInsurance() string {
	if x != nil {
		return x.Insurance
	}
	return ""
}

func (x *OrderDTO) GetWarranty() string {
	if x != nil {
		return x.Warranty
	}
	return ""
}

func (x *OrderDTO) GetDeliveryType() uint32 {
	if x != nil {
		return x.DeliveryType
	}
	return 0
}

func (x *OrderDTO) GetDeliveryDate() int64 {
	if x != nil {
		return x.DeliveryDate
	}
	return 0
}

func (x *OrderDTO) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *OrderDTO) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *OrderDTO) GetConsigneeName() string {
	if x != nil {
		return x.ConsigneeName
	}
	return ""
}

func (x *OrderDTO) GetOwnerNum() string {
	if x != nil {
		return x.OwnerNum
	}
	return ""
}

func (x *OrderDTO) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *OrderDTO) GetCar() string {
	if x != nil {
		return x.Car
	}
	return ""
}

func (x *OrderDTO) GetStatusLabel() string {
	if x != nil {
		return x.StatusLabel
	}
	return ""
}

func (x *OrderDTO) GetCarPrice() string {
	if x != nil {
		return x.CarPrice
	}
	return ""
}

func (x *OrderDTO) GetContactNo() string {
	if x != nil {
		return x.ContactNo
	}
	return ""
}

func (x *OrderDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderDTO) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OrderDTO) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *OrderDTO) GetFeeList() []*OrderFeeDto {
	if x != nil {
		return x.FeeList
	}
	return nil
}

func (x *OrderDTO) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *OrderDTO) GetPaymentAmount() string {
	if x != nil {
		return x.PaymentAmount
	}
	return ""
}

func (x *OrderDTO) GetRefundAmount() string {
	if x != nil {
		return x.RefundAmount
	}
	return ""
}

func (x *OrderDTO) GetReceiptTime() uint64 {
	if x != nil {
		return x.ReceiptTime
	}
	return 0
}

func (x *OrderDTO) GetDeliveryId() uint64 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *OrderDTO) GetOrderPicName() string {
	if x != nil {
		return x.OrderPicName
	}
	return ""
}

func (x *OrderDTO) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *OrderDTO) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *OrderDTO) GetJpjCost() string {
	if x != nil {
		return x.JpjCost
	}
	return ""
}

func (x *OrderDTO) GetRoadTaxCost() string {
	if x != nil {
		return x.RoadTaxCost
	}
	return ""
}

func (x *OrderDTO) GetFisCost() string {
	if x != nil {
		return x.FisCost
	}
	return ""
}

func (x *OrderDTO) GetWarrantyCost() string {
	if x != nil {
		return x.WarrantyCost
	}
	return ""
}

func (x *OrderDTO) GetBankCost() string {
	if x != nil {
		return x.BankCost
	}
	return ""
}

func (x *OrderDTO) GetPaymentCompleteTime() uint64 {
	if x != nil {
		return x.PaymentCompleteTime
	}
	return 0
}

type OrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo   uint32      `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize uint32      `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Order    []*OrderDTO `protobuf:"bytes,3,rep,name=order,proto3" json:"order,omitempty"`
	Count    uint32      `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *OrderList) Reset() {
	*x = OrderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderList) ProtoMessage() {}

func (x *OrderList) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderList.ProtoReflect.Descriptor instead.
func (*OrderList) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderList) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *OrderList) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderList) GetOrder() []*OrderDTO {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *OrderList) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type OrderCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo     uint32   `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize   uint32   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserId     uint64   `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserIds    []uint64 `protobuf:"varint,4,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	OrderNo    uint64   `protobuf:"varint,5,opt,name=orderNo,proto3" json:"orderNo,omitempty"`
	CarId      uint64   `protobuf:"varint,6,opt,name=carId,proto3" json:"carId,omitempty"`
	StoreId    uint64   `protobuf:"varint,7,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Status     uint32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime string   `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	StaffId    uint64   `protobuf:"varint,10,opt,name=staffId,proto3" json:"staffId,omitempty"` //订单PIC
	OrderId    uint64   `protobuf:"varint,11,opt,name=orderId,proto3" json:"orderId,omitempty"` //后面查询用
	Remarks    string   `protobuf:"bytes,12,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *OrderCondition) Reset() {
	*x = OrderCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCondition) ProtoMessage() {}

func (x *OrderCondition) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCondition.ProtoReflect.Descriptor instead.
func (*OrderCondition) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *OrderCondition) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *OrderCondition) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderCondition) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderCondition) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *OrderCondition) GetOrderNo() uint64 {
	if x != nil {
		return x.OrderNo
	}
	return 0
}

func (x *OrderCondition) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *OrderCondition) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *OrderCondition) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderCondition) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderCondition) GetStaffId() uint64 {
	if x != nil {
		return x.StaffId
	}
	return 0
}

func (x *OrderCondition) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderCondition) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *any.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Code string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Response) GetData() *any.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Response) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddOrderData) Reset() {
	*x = AddOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderData) ProtoMessage() {}

func (x *AddOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderData.ProtoReflect.Descriptor instead.
func (*AddOrderData) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{5}
}

func (x *AddOrderData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteId) Reset() {
	*x = DeleteId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteId) ProtoMessage() {}

func (x *DeleteId) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteId.ProtoReflect.Descriptor instead.
func (*DeleteId) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteId) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteId) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OrderCheckList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckLists []*orderCheckList.CheckListDto `protobuf:"bytes,1,rep,name=checkLists,proto3" json:"checkLists,omitempty"`
}

func (x *OrderCheckList) Reset() {
	*x = OrderCheckList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCheckList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCheckList) ProtoMessage() {}

func (x *OrderCheckList) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCheckList.ProtoReflect.Descriptor instead.
func (*OrderCheckList) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderCheckList) GetCheckLists() []*orderCheckList.CheckListDto {
	if x != nil {
		return x.CheckLists
	}
	return nil
}

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderDto       *OrderDTO                       `protobuf:"bytes,1,opt,name=orderDto,proto3" json:"orderDto,omitempty"`
	OrderFees      []*orderFee.OrderFeeDto         `protobuf:"bytes,2,rep,name=orderFees,proto3" json:"orderFees,omitempty"`
	PaymentDtos    *payment.PaymentList            `protobuf:"bytes,3,opt,name=paymentDtos,proto3" json:"paymentDtos,omitempty"`
	OrderCheckList *OrderCheckList                 `protobuf:"bytes,4,opt,name=orderCheckList,proto3" json:"orderCheckList,omitempty"`
	OrderRefund    *orderRefund.OrderRefundDto     `protobuf:"bytes,5,opt,name=orderRefund,proto3" json:"orderRefund,omitempty"`
	OrderFlowLogs  []*orderFlowLog.OrderFlowLogDto `protobuf:"bytes,6,rep,name=orderFlowLogs,proto3" json:"orderFlowLogs,omitempty"`
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{8}
}

func (x *OrderDetail) GetOrderDto() *OrderDTO {
	if x != nil {
		return x.OrderDto
	}
	return nil
}

func (x *OrderDetail) GetOrderFees() []*orderFee.OrderFeeDto {
	if x != nil {
		return x.OrderFees
	}
	return nil
}

func (x *OrderDetail) GetPaymentDtos() *payment.PaymentList {
	if x != nil {
		return x.PaymentDtos
	}
	return nil
}

func (x *OrderDetail) GetOrderCheckList() *OrderCheckList {
	if x != nil {
		return x.OrderCheckList
	}
	return nil
}

func (x *OrderDetail) GetOrderRefund() *orderRefund.OrderRefundDto {
	if x != nil {
		return x.OrderRefund
	}
	return nil
}

func (x *OrderDetail) GetOrderFlowLogs() []*orderFlowLog.OrderFlowLogDto {
	if x != nil {
		return x.OrderFlowLogs
	}
	return nil
}

type OrderFeeDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StaffId uint64 `protobuf:"varint,3,opt,name=staffId,proto3" json:"staffId,omitempty"`
	OrderId uint64 `protobuf:"varint,4,opt,name=orderId,proto3" json:"orderId,omitempty"`
	FeeType uint32 `protobuf:"varint,5,opt,name=feeType,proto3" json:"feeType,omitempty"`
	Status  uint32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Amount  string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *OrderFeeDto) Reset() {
	*x = OrderFeeDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFeeDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFeeDto) ProtoMessage() {}

func (x *OrderFeeDto) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFeeDto.ProtoReflect.Descriptor instead.
func (*OrderFeeDto) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{9}
}

func (x *OrderFeeDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderFeeDto) GetStaffId() uint64 {
	if x != nil {
		return x.StaffId
	}
	return 0
}

func (x *OrderFeeDto) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderFeeDto) GetFeeType() uint32 {
	if x != nil {
		return x.FeeType
	}
	return 0
}

func (x *OrderFeeDto) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderFeeDto) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type UpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StaffId uint64 `protobuf:"varint,2,opt,name=staffId,proto3" json:"staffId,omitempty"`
	Status  uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Remarks string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *UpdateInfo) Reset() {
	*x = UpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfo) ProtoMessage() {}

func (x *UpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfo.ProtoReflect.Descriptor instead.
func (*UpdateInfo) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateInfo) GetStaffId() uint64 {
	if x != nil {
		return x.StaffId
	}
	return 0
}

func (x *UpdateInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateInfo) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

var File_order_order_proto protoreflect.FileDescriptor

var file_order_order_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe4, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb6, 0x0b, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x69, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x69, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x61, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x61, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x21, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x66, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x61, 0x72, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x70, 0x6a, 0x43,
	0x6f, 0x73, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x70, 0x6a, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x73,
	0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x78,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x7c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x54,
	0x4f, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc6,
	0x02, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x5a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xea, 0x02, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x74, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x74, 0x6f,
	0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44,
	0x74, 0x6f, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12,
	0x43, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c,
	0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4c,
	0x6f, 0x67, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65,
	0x65, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x68, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x32, 0xde, 0x03, 0x0a,
	0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x0f, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x1a, 0x0f,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x1a, 0x0f, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_order_proto_rawDescOnce sync.Once
	file_order_order_proto_rawDescData = file_order_order_proto_rawDesc
)

func file_order_order_proto_rawDescGZIP() []byte {
	file_order_order_proto_rawDescOnce.Do(func() {
		file_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_order_proto_rawDescData)
	})
	return file_order_order_proto_rawDescData
}

var file_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_order_order_proto_goTypes = []interface{}{
	(*DeliveryInfo)(nil),                 // 0: order.DeliveryInfo
	(*OrderDTO)(nil),                     // 1: order.OrderDTO
	(*OrderList)(nil),                    // 2: order.OrderList
	(*OrderCondition)(nil),               // 3: order.OrderCondition
	(*Response)(nil),                     // 4: order.Response
	(*AddOrderData)(nil),                 // 5: order.AddOrderData
	(*DeleteId)(nil),                     // 6: order.DeleteId
	(*OrderCheckList)(nil),               // 7: order.OrderCheckList
	(*OrderDetail)(nil),                  // 8: order.OrderDetail
	(*OrderFeeDto)(nil),                  // 9: order.OrderFeeDto
	(*UpdateInfo)(nil),                   // 10: order.UpdateInfo
	(*any.Any)(nil),                      // 11: google.protobuf.Any
	(*orderCheckList.CheckListDto)(nil),  // 12: orderCheckList.CheckListDto
	(*orderFee.OrderFeeDto)(nil),         // 13: orderFee.OrderFeeDto
	(*payment.PaymentList)(nil),          // 14: payment.PaymentList
	(*orderRefund.OrderRefundDto)(nil),   // 15: orderRefund.OrderRefundDto
	(*orderFlowLog.OrderFlowLogDto)(nil), // 16: orderFlowLog.OrderFlowLogDto
	(*common.Response)(nil),              // 17: common.Response
}
var file_order_order_proto_depIdxs = []int32{
	9,  // 0: order.OrderDTO.feeList:type_name -> order.OrderFeeDto
	1,  // 1: order.OrderList.order:type_name -> order.OrderDTO
	11, // 2: order.Response.data:type_name -> google.protobuf.Any
	12, // 3: order.OrderCheckList.checkLists:type_name -> orderCheckList.CheckListDto
	1,  // 4: order.OrderDetail.orderDto:type_name -> order.OrderDTO
	13, // 5: order.OrderDetail.orderFees:type_name -> orderFee.OrderFeeDto
	14, // 6: order.OrderDetail.paymentDtos:type_name -> payment.PaymentList
	7,  // 7: order.OrderDetail.orderCheckList:type_name -> order.OrderCheckList
	15, // 8: order.OrderDetail.orderRefund:type_name -> orderRefund.OrderRefundDto
	16, // 9: order.OrderDetail.orderFlowLogs:type_name -> orderFlowLog.OrderFlowLogDto
	1,  // 10: order.Order.Add:input_type -> order.OrderDTO
	6,  // 11: order.Order.Delete:input_type -> order.DeleteId
	1,  // 12: order.Order.Update:input_type -> order.OrderDTO
	3,  // 13: order.Order.GetList:input_type -> order.OrderCondition
	3,  // 14: order.Order.GetDetail:input_type -> order.OrderCondition
	3,  // 15: order.Order.CancelOrder:input_type -> order.OrderCondition
	0,  // 16: order.Order.SaveDeliveryInfo:input_type -> order.DeliveryInfo
	10, // 17: order.Order.UpdateOrderStatus:input_type -> order.UpdateInfo
	1,  // 18: order.Order.UpdateCost:input_type -> order.OrderDTO
	4,  // 19: order.Order.Add:output_type -> order.Response
	4,  // 20: order.Order.Delete:output_type -> order.Response
	4,  // 21: order.Order.Update:output_type -> order.Response
	4,  // 22: order.Order.GetList:output_type -> order.Response
	4,  // 23: order.Order.GetDetail:output_type -> order.Response
	4,  // 24: order.Order.CancelOrder:output_type -> order.Response
	4,  // 25: order.Order.SaveDeliveryInfo:output_type -> order.Response
	17, // 26: order.Order.UpdateOrderStatus:output_type -> common.Response
	17, // 27: order.Order.UpdateCost:output_type -> common.Response
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_order_order_proto_init() }
func file_order_order_proto_init() {
	if File_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCheckList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFeeDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_order_proto_goTypes,
		DependencyIndexes: file_order_order_proto_depIdxs,
		MessageInfos:      file_order_order_proto_msgTypes,
	}.Build()
	File_order_order_proto = out.File
	file_order_order_proto_rawDesc = nil
	file_order_order_proto_goTypes = nil
	file_order_order_proto_depIdxs = nil
}
